#!/usr/bin/env python3

##################################################
# Author: Jackie Cheung
# Date: 2018/11/13
# Version: 0.1
# Class: Au2018-Py210B
# Description: Mailroom Part 4 - Unit Testing and Advanced Argument Passing
##################################################

import os
import mailroom4 as mailroom

donor_dict = mailroom.donor_dict

def test_list_donors():
    """
    Tests if the list operation is showing all the donor name correctly
    """
    result = mailroom.list_donors()
    assert "Jeff Bezos" in result
    assert len(result) == 4


def test_send_a_thank_you():
    """
    Tests if the operations for donor dictionary/database are working properly
    """
    name = "Jeff Bezos"
    amount = 123.45
    new_name = "Michael Jordan"
    new_amount = 111.22

    # Check if new donation can be added to existing donor
    donor_dict[tuple(name.split())].append(amount)
    assert donor_dict[("Jeff", "Bezos")] == [877.33, 123.45]

    # Check if new donor with new donation can be added to the dictionary/database
    donor_dict[tuple(new_name.split())] = [new_amount]
    assert donor_dict[("Michael", "Jordan")] == [111.22]

    # Check if dictionary/database is responding correctly if donor is not existed
    no_name = "Russell Wilson"
    assert tuple(no_name.split()) not in donor_dict


def test_send_email():
    """
    Tests if the nicely formatted Thank you letter is generated
    """

    donor = "Michael Jordan"
    amount = 100

    # Check if specific wordings are showing correctly from the letter
    email = mailroom.send_email(donor, amount)
    assert email.startswith("Dear Michael Jordan,")
    assert email.endswith("-The Mailroom")
    assert "donation of $100.00" in email   


def test_create_a_report():
    """
    Tests if the nicely formatted overall summary report is generated
    """

    # Check the report is created properly
    results = mailroom.create_a_report()

    # Check the number of the rows generated by the report
    # Assert == 7 because of newly added donor from test_send_email() function, i.e. Michael Jordan
    assert len(results.split('\n')) == 7


def test_send_letters_to_all():
    """
    Tests if individual letter is generated with corresponding filenames
    """

    mailroom.send_letters_to_all()

    assert os.path.isfile('Paul_Allen.txt')
    with open('Paul_Allen.txt') as f:
        content = len(f.read())
    assert content > 0